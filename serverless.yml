service: serverless-rest-api-with-dynamodb

frameworkVersion: ">=1.1.0 <=2.70.0"

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: 20201221
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    S3_BUCKET: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ses:SendEmail
        - ses:SendRawEmail
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:DeleteItem
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
        - lambda:InvokeAsync
      Resource:
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:GetBucketNotification
        - s3:PutBucketNotification
      Resource: "arn:aws:s3:::${self:provider.environment.S3_BUCKET}/*"
package:

  exclude:
    - data/**
    - .volume/**

functions:
  create:
    handler: customers/createCustomer.createCustomer
    events:
      - http:
          path: customers
          method: post
          cors: true

  list:
    handler: customers/listCustomers.listCustomers
    events:
      - http:
          path: customers
          method: get
          cors: true

  get:
    handler: customers/getCustomer.getCustomer
    events:
      - http:
          path: customers/{id}
          method: get
          cors: true


  delete:
    handler: customers/deleteCustomer.deleteCustomer
    events:
      - http:
          path: customers/{id}
          method: delete
          cors: true
          
  update:
    handler: customers/updateCustomer.updateCustomer
    events:
      - http:
          path: customers/{id}
          method: put
          cors: true

  sendEmail:
    handler: customers/sendEmail.sendEmail
    events:
      - http:
          path: customers/sendEmail
          method: post
          cors: true
      - http:
          path: customers
          method: post
          cors: true

resources:
    - ${file(resources/dynamo_resource.yml)}
    - ${file(resources/s3_bucket_resource.yml)}

plugins:
  - serverless-localstack

custom:
  localstack:
    stages:
      - local